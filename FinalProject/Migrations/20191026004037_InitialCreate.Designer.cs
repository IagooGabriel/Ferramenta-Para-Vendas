// <auto-generated />
using System;
using FinalProject.Models.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Migrations
{
    [DbContext(typeof(ContextoBanco))]
    [Migration("20191026004037_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FinalProject.Models.Entity.Cliente", b =>
                {
                    b.Property<int>("id_cli")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("contato_cli");

                    b.Property<string>("contato_cli2");

                    b.Property<DateTime>("dataCad_cli");

                    b.Property<string>("nome_cli");

                    b.HasKey("id_cli");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.Servico", b =>
                {
                    b.Property<int>("id_serv")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nome_serv");

                    b.Property<float>("valor_serv");

                    b.HasKey("id_serv");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.ServicoHistorico", b =>
                {
                    b.Property<int>("id_servHist")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dtAlteracao");

                    b.Property<string>("oqfoialterado");

                    b.Property<int?>("servicosid_serv");

                    b.HasKey("id_servHist");

                    b.HasIndex("servicosid_serv");

                    b.ToTable("ServicosHistoricos");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.TabelaNegociacao", b =>
                {
                    b.Property<int>("id_neg")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("max_porcent");

                    b.Property<float>("min_porcent");

                    b.Property<int?>("servicosid_serv");

                    b.Property<int?>("vendedoresid_vend");

                    b.HasKey("id_neg");

                    b.HasIndex("servicosid_serv");

                    b.HasIndex("vendedoresid_vend");

                    b.ToTable("TabelasNegociacao");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.TipoPagamento", b =>
                {
                    b.Property<int>("id_tpPag")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nome_tpPag");

                    b.HasKey("id_tpPag");

                    b.ToTable("TiposPagamento");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.Venda", b =>
                {
                    b.Property<int>("id_venda")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("clientesid_cli");

                    b.Property<DateTime>("dataVenda");

                    b.Property<int>("parcelas");

                    b.Property<int?>("servicosid_serv");

                    b.Property<int?>("tipoPagamentoid_tpPag");

                    b.Property<float>("valor");

                    b.Property<int?>("vendedoresid_vend");

                    b.HasKey("id_venda");

                    b.HasIndex("clientesid_cli");

                    b.HasIndex("servicosid_serv");

                    b.HasIndex("tipoPagamentoid_tpPag");

                    b.HasIndex("vendedoresid_vend");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.VendaParcela", b =>
                {
                    b.Property<int>("id_parc")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dt_pagamento");

                    b.Property<DateTime>("dt_vencimento");

                    b.Property<int>("parcelas");

                    b.Property<float>("valor");

                    b.Property<int?>("vendasPid_venda");

                    b.HasKey("id_parc");

                    b.HasIndex("vendasPid_venda");

                    b.ToTable("VendasParcelas");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.Vendedor", b =>
                {
                    b.Property<int>("id_vend")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ativo");

                    b.Property<string>("nome_vend");

                    b.HasKey("id_vend");

                    b.ToTable("Vendederores");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.ServicoHistorico", b =>
                {
                    b.HasOne("FinalProject.Models.Entity.Servico", "servicos")
                        .WithMany()
                        .HasForeignKey("servicosid_serv");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.TabelaNegociacao", b =>
                {
                    b.HasOne("FinalProject.Models.Entity.Servico", "servicos")
                        .WithMany()
                        .HasForeignKey("servicosid_serv");

                    b.HasOne("FinalProject.Models.Entity.Vendedor", "vendedores")
                        .WithMany()
                        .HasForeignKey("vendedoresid_vend");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.Venda", b =>
                {
                    b.HasOne("FinalProject.Models.Entity.Cliente", "clientes")
                        .WithMany()
                        .HasForeignKey("clientesid_cli");

                    b.HasOne("FinalProject.Models.Entity.Servico", "servicos")
                        .WithMany()
                        .HasForeignKey("servicosid_serv");

                    b.HasOne("FinalProject.Models.Entity.TipoPagamento", "tipoPagamento")
                        .WithMany()
                        .HasForeignKey("tipoPagamentoid_tpPag");

                    b.HasOne("FinalProject.Models.Entity.Vendedor", "vendedores")
                        .WithMany()
                        .HasForeignKey("vendedoresid_vend");
                });

            modelBuilder.Entity("FinalProject.Models.Entity.VendaParcela", b =>
                {
                    b.HasOne("FinalProject.Models.Entity.Venda", "vendasP")
                        .WithMany()
                        .HasForeignKey("vendasPid_venda");
                });
#pragma warning restore 612, 618
        }
    }
}
